openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /users/{id}:
    get:
      tags:
        - user-controller
      operationId: findById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDTO'
    put:
      tags:
        - user-controller
      operationId: update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDTO'
    delete:
      tags:
        - user-controller
      operationId: delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /offers/{id}:
    get:
      tags:
        - offer-controller
      operationId: find_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OfferDTO'
    put:
      tags:
        - offer-controller
      operationId: update_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfferDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OfferDTO'
    delete:
      tags:
        - offer-controller
      operationId: delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /contracts/{id}:
    get:
      tags:
        - contract-controller
      operationId: find_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContractDTO'
    put:
      tags:
        - contract-controller
      operationId: update_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContractDTO'
    delete:
      tags:
        - contract-controller
      operationId: delete_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /users:
    get:
      tags:
        - user-controller
      operationId: findAll
      parameters:
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageUserDTO'
    post:
      tags:
        - user-controller
      operationId: add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDTO'
  /users/removeCertificate:
    post:
      tags:
        - user-controller
      operationId: removeCertificate
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: certificateId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CertificateDTO'
  /users/assignCertificate:
    post:
      tags:
        - user-controller
      operationId: assignCertificate
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: certificateId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CertificateDTO'
  /offers:
    post:
      tags:
        - offer-controller
      operationId: add_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfferDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OfferDTO'
  /logout:
    post:
      tags:
        - auth-controller
      operationId: logout
      responses:
        "200":
          description: OK
  /login:
    post:
      tags:
        - auth-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /contracts:
    get:
      tags:
        - contract-controller
      operationId: findAll_1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContractDTO'
    post:
      tags:
        - contract-controller
      operationId: add_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContractDTO'
  /users/email:
    get:
      tags:
        - user-controller
      operationId: findByEmail
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDTO'
  /roles:
    get:
      tags:
        - role-controller
      operationId: findAllRoles
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleDTO'
  /roles/{id}:
    get:
      tags:
        - role-controller
      operationId: find
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RoleDTO'
  /offers/contracts/{id}:
    get:
      tags:
        - offer-controller
      operationId: findAllForGivenContract
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OfferDTO'
  /certificates/{userId}:
    get:
      tags:
        - certificate-controller
      operationId: findAllCertificatesByUserId
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CertificateDTO'
components:
  schemas:
    CertificateDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    RoleDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    UserDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        password:
          type: string
        role:
          $ref: '#/components/schemas/RoleDTO'
        email:
          type: string
        certificates:
          type: array
          items:
            $ref: '#/components/schemas/CertificateDTO'
    OfferDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        offerOwnerId:
          type: integer
          format: int32
        contractId:
          type: integer
          format: int32
        price:
          type: integer
          format: int32
    ContractDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        ownerId:
          type: integer
          format: int32
        description:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        startPrice:
          type: integer
          format: int32
    AuthenticationRequestDTO:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    Pageable:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/Sort'
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        paged:
          type: boolean
        unpaged:
          type: boolean
    Sort:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
    PageUserDTO:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/UserDTO'
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/Pageable'
        empty:
          type: boolean
